{"version":3,"file":"index.es.js","sources":["../src/fatalError.js","../src/scheduler/PropagateTask.js","../src/source/empty.js","../src/source/never.js","../src/source/at.js","../src/source/now.js","../src/source/periodic.js","../src/source/newStream.js","../src/sink/Pipe.js","../src/combinator/slice/bounds.js","../src/fusion/Filter.js","../src/fusion/FilterMap.js","../src/fusion/Map.js","../src/disposable/SettableDisposable.js","../src/combinator/slice/index.js","../src/combinator/zipItems.js","../src/runEffects.js","../src/run.js","../src/sink/RelativeSink.js","../src/combinator/withLocalTime.js","../src/combinator/loop.js","../src/combinator/scan.js","../src/combinator/continueWith.js","../src/combinator/startWith.js","../src/combinator/transform.js","../src/sink/IndexSink.js","../src/invoke.js","../src/combinator/combine.js","../src/combinator/applicative.js","../src/LinkedList.js","../src/combinator/mergeConcurrently.js","../src/combinator/chain.js","../src/combinator/concatMap.js","../src/combinator/merge.js","../src/combinator/snapshot.js","../src/Queue.js","../src/combinator/zip.js","../src/combinator/switch.js","../src/combinator/filter.js","../src/combinator/timeslice.js","../src/combinator/delay.js","../src/combinator/limit.js","../src/combinator/promises.js","../src/sink/SafeSink.js","../src/source/tryEvent.js","../src/combinator/errors.js","../src/combinator/multicast.js","../src/index.js"],"sourcesContent":["/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function fatalError (e) {\n  setTimeout(rethrow, 0, e)\n}\n\nfunction rethrow (e) {\n  throw e\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport fatal from '../fatalError'\n\nexport const propagateTask = (run, value, sink) => new PropagateTask(run, value, sink)\n\nexport const propagateEventTask = (value, sink) => propagateTask(runEvent, value, sink)\n\nexport const propagateEndTask = sink => propagateTask(runEnd, undefined, sink)\n\nexport const propagateErrorTask = (value, sink) => propagateTask(runError, value, sink)\n\nexport class PropagateTask {\n  constructor (run, value, sink) {\n    this._run = run\n    this.value = value\n    this.sink = sink\n    this.active = true\n  }\n\n  dispose () {\n    this.active = false\n  }\n\n  run (t) {\n    if (!this.active) {\n      return\n    }\n    const run = this._run\n    run(t, this.value, this.sink)\n  }\n\n  error (t, e) {\n    // TODO: Remove this check and just do this.sink.error(t, e)?\n    if (!this.active) {\n      return fatal(e)\n    }\n    this.sink.error(t, e)\n  }\n}\n\nconst runEvent = (t, x, sink) => sink.event(t, x)\n\nconst runEnd = (t, _, sink) => sink.end(t)\n\nconst runError = (t, e, sink) => sink.error(t, e)\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nimport { propagateEndTask } from '../scheduler/PropagateTask'\nimport { asap } from '@most/scheduler'\n\nexport const empty = () => EMPTY\n\nexport const isCanonicalEmpty = stream =>\n  stream === EMPTY\n\nexport const containsCanonicalEmpty = streams =>\n  streams.some(isCanonicalEmpty)\n\nclass Empty {\n  run (sink, scheduler) {\n    return asap(propagateEndTask(sink), scheduler)\n  }\n}\n\nconst EMPTY = new Empty()\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nimport { disposeNone } from '@most/disposable'\n\nexport const never = () => NEVER\n\nclass Never {\n  run () {\n    return disposeNone()\n  }\n}\n\nconst NEVER = new Never()\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nimport { propagateTask } from '../scheduler/PropagateTask'\nimport { delay } from '@most/scheduler'\n\nexport const at = (t, x) => new At(t, x)\n\nclass At {\n  constructor (t, x) {\n    this.time = t\n    this.value = x\n  }\n\n  run (sink, scheduler) {\n    return delay(this.time, propagateTask(runAt, this.value, sink), scheduler)\n  }\n}\n\nfunction runAt (t, x, sink) {\n  sink.event(t, x)\n  sink.end(t)\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nimport { at } from './at'\n\nexport const now = x => at(0, x)\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { propagateEventTask } from '../scheduler/PropagateTask'\nimport { periodic as schedulePeriodic } from '@most/scheduler'\n\n/**\n * Create a stream of events that occur at a regular period\n * @param {Number} period periodicity of events\n * @returns {Stream} new stream of periodic events, the event value is undefined\n */\nexport const periodic = period =>\n  new Periodic(period)\n\nclass Periodic {\n  constructor (period) {\n    this.period = period\n  }\n\n  run (sink, scheduler) {\n    return schedulePeriodic(this.period, propagateEventTask(undefined, sink), scheduler)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nexport const newStream = run => new Stream(run)\n\nclass Stream {\n  constructor (run) {\n    this.run = run\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n/** @author Brian Cavalier */\n\nexport default class Pipe {\n  constructor (sink) {\n    this.sink = sink\n  }\n\n  event (t, x) {\n    return this.sink.event(t, x)\n  }\n\n  end (t) {\n    return this.sink.end(t)\n  }\n\n  error (t, e) {\n    return this.sink.error(t, e)\n  }\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\n\n// A slice Bounds type that narrows min values via accumulation\n// and max values via Math.min.\n// type Bounds = { min: number, max: number }\n// Notes:\n// 0 <= min <= max\n// slice(min2, max2, slice(min1, max1, s)) ~ slice(min1 + min2, Math.min(max1, min1 + max2), s)\n// A bounds has a 1d coord system with origin 0, extending to Infinity.  Both min and max\n// are relative to the origin (0).  However, when merging bounds b1 and b2, we\n// *interpret* b2 as being relative to b1, hence adding min1 to *both* min2 and max2.\n// This essentially translates b2's coordinates back into origin coordinates\n// as bounds are merged.\n\n// Construct a constrained bounds\nexport const boundsFrom = (unsafeMin, unsafeMax) => {\n  const min = Math.max(0, unsafeMin)\n  const max = Math.max(min, unsafeMax)\n  return { min, max }\n}\n\nexport const minBounds = min =>\n  boundsFrom(min, Infinity)\n\nexport const maxBounds = max =>\n  boundsFrom(0, max)\n\n// Combine 2 bounds by narrowing min and max\nexport const mergeBounds = (b1, b2) =>\n  boundsFrom(b1.min + b2.min, Math.min(b1.max, b1.min + b2.max))\n\n// Nil bounds excludes all slice indices\nexport const isNilBounds = b =>\n  b.min >= b.max\n\n// Infinite bounds includes all slice indices\nexport const isInfiniteBounds = b =>\n  b.min <= 0 && b.max === Infinity\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport { isCanonicalEmpty } from '../source/empty'\n\nexport default class Filter {\n  constructor (p, source) {\n    this.p = p\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new FilterSink(this.p, sink), scheduler)\n  }\n\n  /**\n   * Create a filtered source, fusing adjacent filter.filter if possible\n   * @param {function(x:*):boolean} p filtering predicate\n   * @param {{run:function}} source source to filter\n   * @returns {Filter} filtered source\n   */\n  static create (p, source) {\n    if (isCanonicalEmpty(source)) {\n      return source\n    }\n\n    if (source instanceof Filter) {\n      return new Filter(and(source.p, p), source.source)\n    }\n\n    return new Filter(p, source)\n  }\n}\n\nclass FilterSink extends Pipe {\n  constructor (p, sink) {\n    super(sink)\n    this.p = p\n  }\n\n  event (t, x) {\n    const p = this.p\n    p(x) && this.sink.event(t, x)\n  }\n}\n\nconst and = (p, q) => x => p(x) && q(x)\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\n\nexport default class FilterMap {\n  constructor (p, f, source) {\n    this.p = p\n    this.f = f\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new FilterMapSink(this.p, this.f, sink), scheduler)\n  }\n}\n\nclass FilterMapSink extends Pipe {\n  constructor (p, f, sink) {\n    super(sink)\n    this.p = p\n    this.f = f\n  }\n\n  event (t, x) {\n    const f = this.f\n    const p = this.p\n    p(x) && this.sink.event(t, f(x))\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport Filter from './Filter'\nimport FilterMap from './FilterMap'\nimport { compose } from '@most/prelude'\nimport { isCanonicalEmpty, empty } from '../source/empty'\n\nexport default class Map {\n  constructor (f, source) {\n    this.f = f\n    this.source = source\n  }\n\n  run (sink, scheduler) { // eslint-disable-line no-extend-native\n    return this.source.run(new MapSink(this.f, sink), scheduler)\n  }\n\n  /**\n   * Create a mapped source, fusing adjacent map.map, filter.map,\n   * and filter.map.map if possible\n   * @param {function(*):*} f mapping function\n   * @param {{run:function}} source source to map\n   * @returns {Map|FilterMap} mapped source, possibly fused\n   */\n  static create (f, source) {\n    if (isCanonicalEmpty(source)) {\n      return empty()\n    }\n\n    if (source instanceof Map) {\n      return new Map(compose(f, source.f), source.source)\n    }\n\n    if (source instanceof Filter) {\n      return new FilterMap(source.p, f, source.source)\n    }\n\n    return new Map(f, source)\n  }\n}\n\nclass MapSink extends Pipe {\n  constructor (f, sink) {\n    super(sink)\n    this.f = f\n  }\n\n  event (t, x) {\n    const f = this.f\n    this.sink.event(t, f(x))\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nexport default class SettableDisposable {\n  constructor () {\n    this.disposable = undefined\n    this.disposed = false\n  }\n\n  setDisposable (disposable) {\n    if (this.disposable !== void 0) {\n      throw new Error('setDisposable called more than once')\n    }\n\n    this.disposable = disposable\n\n    if (this.disposed) {\n      disposable.dispose()\n    }\n  }\n\n  dispose () {\n    if (this.disposed) {\n      return\n    }\n\n    this.disposed = true\n\n    if (this.disposable !== void 0) {\n      this.disposable.dispose()\n    }\n  }\n}\n","import { empty, isCanonicalEmpty } from '../../source/empty'\nimport { maxBounds, minBounds, boundsFrom, isNilBounds, isInfiniteBounds, mergeBounds } from './bounds'\nimport Map from '../../fusion/Map'\nimport Pipe from '../../sink/Pipe'\nimport SettableDisposable from '../../disposable/SettableDisposable'\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream containing only up to the first n items from stream\n */\nexport const take = (n, stream) =>\n  sliceBounds(maxBounds(n), stream)\n\n/**\n * @param {number} n\n * @param {Stream} stream\n * @returns {Stream} new stream with the first n items removed\n */\nexport const skip = (n, stream) =>\n  sliceBounds(minBounds(n), stream)\n\n/**\n * Slice a stream by index. Negative start/end indexes are not supported\n * @param {number} start\n * @param {number} end\n * @param {Stream} stream\n * @returns {Stream} stream containing items where start <= index < end\n */\nexport const slice = (start, end, stream) =>\n  sliceBounds(boundsFrom(start, end), stream)\n\nconst sliceBounds = (bounds, stream) =>\n  isSliceEmpty(bounds, stream) ? empty()\n    : stream instanceof Map ? commuteMapSlice(bounds, stream)\n    : stream instanceof Slice ? fuseSlice(bounds, stream)\n    : createSlice(bounds, stream)\n\nconst isSliceEmpty = (bounds, stream) =>\n  isCanonicalEmpty(stream) || isNilBounds(bounds)\n\nconst createSlice = (bounds, stream) =>\n  isInfiniteBounds(bounds) ? stream : new Slice(bounds, stream)\n\nconst commuteMapSlice = (bounds, mapStream) =>\n  Map.create(mapStream.f, sliceBounds(bounds, mapStream.source))\n\nconst fuseSlice = (bounds, sliceStream) =>\n  sliceBounds(mergeBounds(bounds, sliceStream.bounds), sliceStream.source)\n\nclass Slice {\n  constructor (bounds, source) {\n    this.source = source\n    this.bounds = bounds\n  }\n\n  run (sink, scheduler) {\n    const disposable = new SettableDisposable()\n    const sliceSink = new SliceSink(this.bounds.min, this.bounds.max - this.bounds.min, sink, disposable)\n\n    disposable.setDisposable(this.source.run(sliceSink, scheduler))\n\n    return disposable\n  }\n}\n\nclass SliceSink extends Pipe {\n  constructor (skip, take, sink, disposable) {\n    super(sink)\n    this.skip = skip\n    this.take = take\n    this.disposable = disposable\n  }\n\n  event (t, x) {\n    /* eslint complexity: [1, 4] */\n    if (this.skip > 0) {\n      this.skip -= 1\n      return\n    }\n\n    if (this.take === 0) {\n      return\n    }\n\n    this.take -= 1\n    this.sink.event(t, x)\n    if (this.take === 0) {\n      this.disposable.dispose()\n      this.sink.end(t)\n    }\n  }\n}\n\nexport const takeWhile = (p, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new TakeWhile(p, stream)\n\nclass TakeWhile {\n  constructor (p, source) {\n    this.p = p\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    const disposable = new SettableDisposable()\n    const takeWhileSink = new TakeWhileSink(this.p, sink, disposable)\n\n    disposable.setDisposable(this.source.run(takeWhileSink, scheduler))\n\n    return disposable\n  }\n}\n\nclass TakeWhileSink extends Pipe {\n  constructor (p, sink, disposable) {\n    super(sink)\n    this.p = p\n    this.active = true\n    this.disposable = disposable\n  }\n\n  event (t, x) {\n    if (!this.active) {\n      return\n    }\n\n    const p = this.p\n    this.active = p(x)\n\n    if (this.active) {\n      this.sink.event(t, x)\n    } else {\n      this.disposable.dispose()\n      this.sink.end(t)\n    }\n  }\n}\n\nexport const skipWhile = (p, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new SkipWhile(p, stream)\n\nclass SkipWhile {\n  constructor (p, source) {\n    this.p = p\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new SkipWhileSink(this.p, sink), scheduler)\n  }\n}\n\nclass SkipWhileSink extends Pipe {\n  constructor (p, sink) {\n    super(sink)\n    this.p = p\n    this.skipping = true\n  }\n\n  event (t, x) {\n    if (this.skipping) {\n      const p = this.p\n      this.skipping = p(x)\n      if (this.skipping) {\n        return\n      }\n    }\n\n    this.sink.event(t, x)\n  }\n}\n\nexport const skipAfter = (p, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new SkipAfter(p, stream)\n\nclass SkipAfter {\n  constructor (p, source) {\n    this.p = p\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new SkipAfterSink(this.p, sink), scheduler)\n  }\n}\n\nclass SkipAfterSink extends Pipe {\n  constructor (p, sink) {\n    super(sink)\n    this.p = p\n    this.skipping = false\n  }\n\n  event (t, x) {\n    if (this.skipping) {\n      return\n    }\n\n    const p = this.p\n    this.skipping = p(x)\n    this.sink.event(t, x)\n\n    if (this.skipping) {\n      this.sink.end(t)\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2017 original author or authors */\n\nimport Pipe from '../sink/Pipe'\nimport { empty, isCanonicalEmpty } from '../source/empty'\nimport { take } from './slice'\n\nexport const withItems = (items, stream) =>\n  zipItems(keepLeft, items, stream)\n\nexport const zipItems = (f, items, stream) =>\n  isCanonicalEmpty(stream) || items.length === 0\n    ? empty()\n    : new ZipItems(f, items, take(items.length, stream))\n\nconst keepLeft = (a, _) => a\n\nclass ZipItems {\n  constructor (f, items, source) {\n    this.f = f\n    this.items = items\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new ZipItemsSink(this.f, this.items, sink), scheduler)\n  }\n}\n\nclass ZipItemsSink extends Pipe {\n  constructor (f, items, sink) {\n    super(sink)\n    this.f = f\n    this.items = items\n    this.index = 0\n  }\n\n  event (t, b) {\n    const f = this.f\n    this.sink.event(t, f(this.items[this.index], b))\n    this.index += 1\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nimport { curry2 } from '@most/prelude'\nimport SettableDisposable from './disposable/SettableDisposable'\n\nexport const runEffects = curry2((stream, scheduler) =>\n  new Promise((resolve, reject) =>\n    runStream(stream, scheduler, resolve, reject)))\n\nfunction runStream (stream, scheduler, resolve, reject) {\n  const disposable = new SettableDisposable()\n  const observer = new RunEffectsSink(resolve, reject, disposable)\n\n  disposable.setDisposable(stream.run(observer, scheduler))\n}\n\nclass RunEffectsSink {\n  constructor (end, error, disposable) {\n    this._end = end\n    this._error = error\n    this._disposable = disposable\n    this.active = true\n  }\n\n  event (t, x) {}\n\n  end (t) {\n    if (!this.active) {\n      return\n    }\n    this._dispose(this._error, this._end, undefined)\n  }\n\n  error (t, e) {\n    this._dispose(this._error, this._error, e)\n  }\n\n  _dispose (error, end, x) {\n    this.active = false\n    tryDispose(error, end, x, this._disposable)\n  }\n}\n\nfunction tryDispose (error, end, x, disposable) {\n  try {\n    disposable.dispose()\n  } catch (e) {\n    error(e)\n    return\n  }\n\n  end(x)\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\n// Run a Stream, sending all its events to the\n// provided Sink.\nexport const run = (sink, scheduler, stream) =>\n    stream.run(sink, scheduler)\n","export default class RelativeSink {\n  constructor (offset, sink) {\n    this.sink = sink\n    this.offset = offset\n  }\n\n  event (t, x) {\n    this.sink.event(t + this.offset, x)\n  }\n\n  error (t, e) {\n    this.sink.error(t + this.offset, e)\n  }\n\n  end (t) {\n    this.sink.end(t + this.offset)\n  }\n}\n","import RelativeSink from '../sink/RelativeSink'\nimport { schedulerRelativeTo } from '@most/scheduler'\n\n// Create a stream with its own local clock\n// This transforms time from the provided scheduler's clock to a stream-local\n// clock (which starts at 0), and then *back* to the scheduler's clock before\n// propagating events to sink.  In other words, upstream sources will see local times,\n// and downstream sinks will see non-local (original) times.\nexport const withLocalTime = (origin, stream) =>\n  new WithLocalTime(origin, stream)\n\nclass WithLocalTime {\n  constructor (origin, source) {\n    this.origin = origin\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(relativeSink(this.origin, sink), schedulerRelativeTo(this.origin, scheduler))\n  }\n}\n\n// Accumulate offsets instead of nesting RelativeSinks, which can happen\n// with higher-order stream and combinators like continueWith when they're\n// applied recursively.\nexport const relativeSink = (origin, sink) =>\n  sink instanceof RelativeSink\n    ? new RelativeSink(origin + sink.offset, sink.sink)\n    : new RelativeSink(origin, sink)\n","/** @license MIT License (c) copyright 2010 original author or authors */\n\nimport Pipe from '../sink/Pipe'\nimport { empty, isCanonicalEmpty } from '../source/empty'\n\n/**\n * Generalized feedback loop. Call a stepper function for each event. The stepper\n * will be called with 2 params: the current seed and the an event value.  It must\n * return a new { seed, value } pair. The `seed` will be fed back into the next\n * invocation of stepper, and the `value` will be propagated as the event value.\n * @param {function(seed:*, value:*):{seed:*, value:*}} stepper loop step function\n * @param {*} seed initial seed value passed to first stepper call\n * @param {Stream} stream event stream\n * @returns {Stream} new stream whose values are the `value` field of the objects\n * returned by the stepper\n */\nexport const loop = (stepper, seed, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new Loop(stepper, seed, stream)\n\nclass Loop {\n  constructor (stepper, seed, source) {\n    this.step = stepper\n    this.seed = seed\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new LoopSink(this.step, this.seed, sink), scheduler)\n  }\n}\n\nclass LoopSink extends Pipe {\n  constructor (stepper, seed, sink) {\n    super(sink)\n    this.step = stepper\n    this.seed = seed\n  }\n\n  event (t, x) {\n    const result = this.step(this.seed, x)\n    this.seed = result.seed\n    this.sink.event(t, result.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport { disposeBoth } from '@most/disposable'\nimport { asap } from '@most/scheduler'\nimport { propagateEventTask } from '../scheduler/PropagateTask'\n\n/**\n * Create a stream containing successive reduce results of applying f to\n * the previous reduce result and the current stream item.\n * @param {function(result:*, x:*):*} f reducer function\n * @param {*} initial initial value\n * @param {Stream} stream stream to scan\n * @returns {Stream} new stream containing successive reduce results\n */\nexport const scan = (f, initial, stream) =>\n  new Scan(f, initial, stream)\n\nclass Scan {\n  constructor (f, z, source) {\n    this.source = source\n    this.f = f\n    this.value = z\n  }\n\n  run (sink, scheduler) {\n    const d1 = asap(propagateEventTask(this.value, sink), scheduler)\n    const d2 = this.source.run(new ScanSink(this.f, this.value, sink), scheduler)\n    return disposeBoth(d1, d2)\n  }\n}\n\nclass ScanSink extends Pipe {\n  constructor (f, z, sink) {\n    super(sink)\n    this.f = f\n    this.value = z\n  }\n\n  event (t, x) {\n    const f = this.f\n    this.value = f(this.value, x)\n    this.sink.event(t, this.value)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport { run } from '../run'\nimport { withLocalTime } from '../combinator/withLocalTime'\nimport { disposeOnce, tryDispose } from '@most/disposable'\n\nexport const continueWith = (f, stream) =>\n  new ContinueWith(f, stream)\n\nclass ContinueWith {\n  constructor (f, source) {\n    this.f = f\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return new ContinueWithSink(this.f, this.source, sink, scheduler)\n  }\n}\n\nclass ContinueWithSink extends Pipe {\n  constructor (f, source, sink, scheduler) {\n    super(sink)\n    this.f = f\n    this.scheduler = scheduler\n    this.active = true\n    this.disposable = disposeOnce(source.run(this, scheduler))\n  }\n\n  event (t, x) {\n    if (!this.active) {\n      return\n    }\n    this.sink.event(t, x)\n  }\n\n  end (t) {\n    if (!this.active) {\n      return\n    }\n\n    tryDispose(t, this.disposable, this.sink)\n\n    this._startNext(t, this.sink)\n  }\n\n  _startNext (t, sink) {\n    try {\n      this.disposable = this._continue(this.f, t, sink)\n    } catch (e) {\n      sink.error(t, e)\n    }\n  }\n\n  _continue (f, t, sink) {\n    return run(sink, this.scheduler, withLocalTime(t, f()))\n  }\n\n  dispose () {\n    this.active = false\n    return this.disposable.dispose()\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nimport { now } from '../source/now'\nimport { continueWith } from './continueWith'\n\nexport const startWith = (x, stream) =>\n  continueWith(() => stream, now(x))\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Map from '../fusion/Map'\nimport Pipe from '../sink/Pipe'\n\n/**\n * Transform each value in the stream by applying f to each\n * @param {function(*):*} f mapping function\n * @param {Stream} stream stream to map\n * @returns {Stream} stream containing items transformed by f\n */\nexport const map = (f, stream) =>\n  Map.create(f, stream)\n\n/**\n* Replace each value in the stream with x\n* @param {*} x\n* @param {Stream} stream\n* @returns {Stream} stream containing items replaced with x\n*/\nexport const constant = (x, stream) =>\n  map(() => x, stream)\n\n/**\n* Perform a side effect for each item in the stream\n* @param {function(x:*):*} f side effect to execute for each item. The\n*  return value will be discarded.\n* @param {Stream} stream stream to tap\n* @returns {Stream} new stream containing the same items as this stream\n*/\nexport const tap = (f, stream) =>\n  new Tap(f, stream)\n\nclass Tap {\n  constructor (f, source) {\n    this.source = source\n    this.f = f\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new TapSink(this.f, sink), scheduler)\n  }\n}\n\nclass TapSink extends Pipe {\n  constructor (f, sink) {\n    super(sink)\n    this.f = f\n  }\n\n  event (t, x) {\n    const f = this.f\n    f(x)\n    this.sink.event(t, x)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Sink from './Pipe'\n\nexport default class IndexSink extends Sink {\n  constructor (i, sink) {\n    super(sink)\n    this.index = i\n    this.active = true\n    this.value = undefined\n  }\n\n  event (t, x) {\n    if (!this.active) {\n      return\n    }\n    this.value = x\n    this.sink.event(t, this)\n  }\n\n  end (t) {\n    if (!this.active) {\n      return\n    }\n    this.active = false\n    this.sink.event(t, this)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default function invoke (f, args) {\n  /* eslint complexity: [2,7] */\n  switch (args.length) {\n    case 0: return f()\n    case 1: return f(args[0])\n    case 2: return f(args[0], args[1])\n    case 3: return f(args[0], args[1], args[2])\n    case 4: return f(args[0], args[1], args[2], args[3])\n    case 5: return f(args[0], args[1], args[2], args[3], args[4])\n    default:\n      return f.apply(void 0, args)\n  }\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\n\nimport { map } from './transform'\nimport { empty, containsCanonicalEmpty } from '../source/empty'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport { disposeAll, tryDispose } from '@most/disposable'\nimport invoke from '../invoke'\n\n/**\n * Combine latest events from two streams\n * @param {function(...events):*} f function to combine most recent events\n * @returns {Stream} stream containing the result of applying f to the most recent\n *  event of each input stream, whenever a new event arrives on any stream.\n */\nexport const combine = (f, stream1, stream2) =>\n  combineArray(f, [stream1, stream2])\n\n/**\n* Combine latest events from all input streams\n* @param {function(...events):*} f function to combine most recent events\n* @param {[Stream]} streams most recent events\n* @returns {Stream} stream containing the result of applying f to the most recent\n*  event of each input stream, whenever a new event arrives on any stream.\n*/\nexport const combineArray = (f, streams) =>\n  streams.length === 0 || containsCanonicalEmpty(streams) ? empty()\n    : streams.length === 1 ? map(f, streams[0])\n    : new Combine(f, streams)\n\nclass Combine {\n  constructor (f, sources) {\n    this.f = f\n    this.sources = sources\n  }\n\n  run (sink, scheduler) {\n    const l = this.sources.length\n    const disposables = new Array(l)\n    const sinks = new Array(l)\n\n    const mergeSink = new CombineSink(disposables, sinks, sink, this.f)\n\n    for (let indexSink, i = 0; i < l; ++i) {\n      indexSink = sinks[i] = new IndexSink(i, mergeSink)\n      disposables[i] = this.sources[i].run(indexSink, scheduler)\n    }\n\n    return disposeAll(disposables)\n  }\n}\n\nclass CombineSink extends Pipe {\n  constructor (disposables, sinks, sink, f) {\n    super(sink)\n    this.disposables = disposables\n    this.sinks = sinks\n    this.f = f\n\n    const l = sinks.length\n    this.awaiting = l\n    this.values = new Array(l)\n    this.hasValue = new Array(l).fill(false)\n    this.activeCount = sinks.length\n  }\n\n  event (t, indexedValue) {\n    if (!indexedValue.active) {\n      this._dispose(t, indexedValue.index)\n      return\n    }\n\n    const i = indexedValue.index\n    const awaiting = this._updateReady(i)\n\n    this.values[i] = indexedValue.value\n    if (awaiting === 0) {\n      this.sink.event(t, invoke(this.f, this.values))\n    }\n  }\n\n  _updateReady (index) {\n    if (this.awaiting > 0) {\n      if (!this.hasValue[index]) {\n        this.hasValue[index] = true\n        this.awaiting -= 1\n      }\n    }\n    return this.awaiting\n  }\n\n  _dispose (t, index) {\n    tryDispose(t, this.disposables[index], this.sink)\n    if (--this.activeCount === 0) {\n      this.sink.end(t)\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { combine } from './combine'\nimport { apply } from '@most/prelude'\n\n/**\n * Assume fs is a stream containing functions, and apply the latest function\n * in fs to the latest value in xs.\n * fs:         --f---------g--------h------>\n * xs:         -a-------b-------c-------d-->\n * ap(fs, xs): --fa-----fb-gb---gc--hc--hd->\n * @param {Stream} fs stream of functions to apply to the latest x\n * @param {Stream} xs stream of values to which to apply all the latest f\n * @returns {Stream} stream containing all the applications of fs to xs\n */\nexport function ap (fs, xs) {\n  return combine(apply, fs, xs)\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\n\n/**\n * Doubly linked list\n * @constructor\n */\nexport default class LinkedList {\n  constructor () {\n    this.head = null\n    this.length = 0\n  }\n\n  /**\n   * Add a node to the end of the list\n   * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to add\n   */\n  add (x) {\n    if (this.head !== null) {\n      this.head.prev = x\n      x.next = this.head\n    }\n    this.head = x\n    ++this.length\n  }\n\n  /**\n   * Remove the provided node from the list\n   * @param {{prev:Object|null, next:Object|null, dispose:function}} x node to remove\n   */\n  remove (x) { // eslint-disable-line  complexity\n    --this.length\n    if (x === this.head) {\n      this.head = this.head.next\n    }\n    if (x.next !== null) {\n      x.next.prev = x.prev\n      x.next = null\n    }\n    if (x.prev !== null) {\n      x.prev.next = x.next\n      x.prev = null\n    }\n  }\n\n  /**\n   * @returns {boolean} true iff there are no nodes in the list\n   */\n  isEmpty () {\n    return this.length === 0\n  }\n\n  /**\n   * Dispose all nodes\n   * @returns {void}\n   */\n  dispose () {\n    if (this.isEmpty()) {\n      return\n    }\n\n    let head = this.head\n    this.head = null\n    this.length = 0\n\n    while (head !== null) {\n      head.dispose()\n      head = head.next\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\n\nimport { disposeOnce, tryDispose } from '@most/disposable'\nimport LinkedList from '../LinkedList'\nimport { empty, isCanonicalEmpty } from '../source/empty'\nimport { id as identity } from '@most/prelude'\nimport { schedulerRelativeTo } from '@most/scheduler'\n\nexport const mergeConcurrently = (concurrency, stream) =>\n  mergeMapConcurrently(identity, concurrency, stream)\n\nexport const mergeMapConcurrently = (f, concurrency, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new MergeConcurrently(f, concurrency, stream)\n\nclass MergeConcurrently {\n  constructor (f, concurrency, source) {\n    this.f = f\n    this.concurrency = concurrency\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return new Outer(this.f, this.concurrency, this.source, sink, scheduler)\n  }\n}\n\nclass Outer {\n  constructor (f, concurrency, source, sink, scheduler) {\n    this.f = f\n    this.concurrency = concurrency\n    this.sink = sink\n    this.scheduler = scheduler\n    this.pending = []\n    this.current = new LinkedList()\n    this.disposable = disposeOnce(source.run(this, scheduler))\n    this.active = true\n  }\n\n  event (t, x) {\n    this._addInner(t, x)\n  }\n\n  _addInner (t, x) {\n    if (this.current.length < this.concurrency) {\n      this._startInner(t, x)\n    } else {\n      this.pending.push(x)\n    }\n  }\n\n  _startInner (t, x) {\n    try {\n      this._initInner(t, x)\n    } catch (e) {\n      this.error(t, e)\n    }\n  }\n\n  _initInner (t, x) {\n    const innerSink = new Inner(t, this, this.sink)\n    innerSink.disposable = mapAndRun(this.f, t, x, innerSink, this.scheduler)\n    this.current.add(innerSink)\n  }\n\n  end (t) {\n    this.active = false\n    tryDispose(t, this.disposable, this.sink)\n    this._checkEnd(t)\n  }\n\n  error (t, e) {\n    this.active = false\n    this.sink.error(t, e)\n  }\n\n  dispose () {\n    this.active = false\n    this.pending.length = 0\n    this.disposable.dispose()\n    this.current.dispose()\n  }\n\n  _endInner (t, inner) {\n    this.current.remove(inner)\n    tryDispose(t, inner, this)\n\n    if (this.pending.length === 0) {\n      this._checkEnd(t)\n    } else {\n      this._startInner(t, this.pending.shift())\n    }\n  }\n\n  _checkEnd (t) {\n    if (!this.active && this.current.isEmpty()) {\n      this.sink.end(t)\n    }\n  }\n}\n\nconst mapAndRun = (f, t, x, sink, scheduler) =>\n  f(x).run(sink, schedulerRelativeTo(t, scheduler))\n\nclass Inner {\n  constructor (time, outer, sink) {\n    this.prev = this.next = null\n    this.time = time\n    this.outer = outer\n    this.sink = sink\n    this.disposable = void 0\n  }\n\n  event (t, x) {\n    this.sink.event(t + this.time, x)\n  }\n\n  end (t) {\n    this.outer._endInner(t + this.time, this)\n  }\n\n  error (t, e) {\n    this.outer.error(t + this.time, e)\n  }\n\n  dispose () {\n    return this.disposable.dispose()\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeConcurrently, mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in the stream to a new stream, and merge it into the\n * returned outer stream. Event arrival times are preserved.\n * @param {function(x:*):Stream} f chaining function, must return a Stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport const chain = (f, stream) => mergeMapConcurrently(f, Infinity, stream)\n\n/**\n * Monadic join. Flatten a Stream<Stream<X>> to Stream<X> by merging inner\n * streams to the outer. Event arrival times are preserved.\n * @param {Stream<Stream<X>>} stream stream of streams\n * @returns {Stream<X>} new stream containing all events of all inner streams\n */\nexport const join = stream => mergeConcurrently(Infinity, stream)\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { mergeMapConcurrently } from './mergeConcurrently'\n\n/**\n * Map each value in stream to a new stream, and concatenate them all\n * stream:              -a---b---cX\n * f(a):                 1-1-1-1X\n * f(b):                        -2-2-2-2X\n * f(c):                                -3-3-3-3X\n * stream.concatMap(f): -1-1-1-1-2-2-2-2-3-3-3-3X\n * @param {function(x:*):Stream} f function to map each value to a stream\n * @param {Stream} stream\n * @returns {Stream} new stream containing all events from each stream returned by f\n */\nexport const concatMap = (f, stream) =>\n  mergeMapConcurrently(f, 1, stream)\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport { empty, isCanonicalEmpty } from '../source/empty'\nimport { disposeAll, tryDispose } from '@most/disposable'\nimport { reduce } from '@most/prelude'\n\n/**\n * @returns {Stream} stream containing events from two streams in time order.\n * If two events are simultaneous they will be merged in arbitrary order.\n */\nexport function merge (stream1, stream2) {\n  return mergeArray([stream1, stream2])\n}\n\n/**\n * @param {Array} streams array of stream to merge\n * @returns {Stream} stream containing events from all input observables\n * in time order.  If two events are simultaneous they will be merged in\n * arbitrary order.\n */\nexport const mergeArray = streams =>\n  mergeStreams(withoutCanonicalEmpty(streams))\n\n/**\n * This implements fusion/flattening for merge.  It will\n * fuse adjacent merge operations.  For example:\n * - a.merge(b).merge(c) effectively becomes merge(a, b, c)\n * - merge(a, merge(b, c)) effectively becomes merge(a, b, c)\n * It does this by concatenating the sources arrays of\n * any nested Merge sources, in effect \"flattening\" nested\n * merge operations into a single merge.\n */\nconst mergeStreams = streams =>\n  streams.length === 0 ? empty()\n    : streams.length === 1 ? streams[0]\n    : new Merge(reduce(appendSources, [], streams))\n\nconst withoutCanonicalEmpty = streams =>\n  streams.filter(isNotCanonicalEmpty)\n\nconst isNotCanonicalEmpty = stream =>\n  !isCanonicalEmpty(stream)\n\nconst appendSources = (sources, stream) =>\n  sources.concat(stream instanceof Merge ? stream.sources : stream)\n\nclass Merge {\n  constructor (sources) {\n    this.sources = sources\n  }\n\n  run (sink, scheduler) {\n    const l = this.sources.length\n    const disposables = new Array(l)\n    const sinks = new Array(l)\n\n    const mergeSink = new MergeSink(disposables, sinks, sink)\n\n    for (let indexSink, i = 0; i < l; ++i) {\n      indexSink = sinks[i] = new IndexSink(i, mergeSink)\n      disposables[i] = this.sources[i].run(indexSink, scheduler)\n    }\n\n    return disposeAll(disposables)\n  }\n}\n\nclass MergeSink extends Pipe {\n  constructor (disposables, sinks, sink) {\n    super(sink)\n    this.disposables = disposables\n    this.activeCount = sinks.length\n  }\n\n  event (t, indexValue) {\n    if (!indexValue.active) {\n      this._dispose(t, indexValue.index)\n      return\n    }\n    this.sink.event(t, indexValue.value)\n  }\n\n  _dispose (t, index) {\n    tryDispose(t, this.disposables[index], this.sink)\n    if (--this.activeCount === 0) {\n      this.sink.end(t)\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\n\nimport Pipe from '../sink/Pipe'\nimport { disposeBoth } from '@most/disposable'\nimport { empty, isCanonicalEmpty } from '../source/empty'\n\nexport const sample = (values, sampler) =>\n  snapshot((x, _) => x, values, sampler)\n\nexport const snapshot = (f, values, sampler) =>\n  isCanonicalEmpty(sampler) || isCanonicalEmpty(values)\n    ? empty()\n    : new Snapshot(f, values, sampler)\n\nexport class Snapshot {\n  constructor (f, values, sampler) {\n    this.f = f\n    this.values = values\n    this.sampler = sampler\n  }\n\n  run (sink, scheduler) {\n    const sampleSink = new SnapshotSink(this.f, sink)\n    const valuesDisposable = this.values.run(sampleSink.latest, scheduler)\n    const samplerDisposable = this.sampler.run(sampleSink, scheduler)\n\n    return disposeBoth(samplerDisposable, valuesDisposable)\n  }\n}\n\nexport class SnapshotSink extends Pipe {\n  constructor (f, sink) {\n    super(sink)\n    this.f = f\n    this.latest = new LatestValueSink(this)\n  }\n\n  event (t, x) {\n    if (this.latest.hasValue) {\n      const f = this.f\n      this.sink.event(t, f(this.latest.value, x))\n    }\n  }\n}\n\nexport class LatestValueSink extends Pipe {\n  constructor (sink) {\n    super(sink)\n    this.hasValue = false\n  }\n\n  event (t, x) {\n    this.value = x\n    this.hasValue = true\n  }\n\n  end () {}\n}\n","// Copied and modified from https://github.com/invertase/denque\n// MIT License\n\n// These constants were extracted directly from denque's shift()\n// It's not clear exactly why the authors chose these particular\n// values, but given denque's stated goals, it seems likely that\n// they were chosen for speed/memory reasons.\n\n// Max value of _head at which Queue is willing to shink\n// its internal array\nconst HEAD_MAX_SHRINK = 2\n\n// Min value of _tail at which Queue is willing to shink\n// its internal array\nconst TAIL_MIN_SHRINK = 10000\n\nexport default class Queue {\n  constructor () {\n    this._head = 0\n    this._tail = 0\n    this._capacityMask = 0x3\n    this._list = new Array(4)\n  }\n\n  push (x) {\n    const tail = this._tail\n    this._list[tail] = x\n    this._tail = (tail + 1) & this._capacityMask\n    if (this._tail === this._head) {\n      this._growArray()\n    }\n\n    if (this._head < this._tail) {\n      return this._tail - this._head\n    } else {\n      return this._capacityMask + 1 - (this._head - this._tail)\n    }\n  }\n\n  shift () {\n    const head = this._head\n    if (head === this._tail) {\n      return undefined\n    }\n\n    const x = this._list[head]\n    this._list[head] = undefined\n    this._head = (head + 1) & this._capacityMask\n    if (head < HEAD_MAX_SHRINK &&\n      this._tail > TAIL_MIN_SHRINK &&\n      this._tail <= this._list.length >>> 2) {\n      this._shrinkArray()\n    }\n\n    return x\n  }\n\n  isEmpty () {\n    return this._head === this._tail\n  }\n\n  length () {\n    if (this._head === this._tail) {\n      return 0\n    } else if (this._head < this._tail) {\n      return this._tail - this._head\n    } else {\n      return this._capacityMask + 1 - (this._head - this._tail)\n    }\n  }\n\n  _growArray () {\n    if (this._head) {\n      // copy existing data, head to end, then beginning to tail.\n      this._list = this._copyArray()\n      this._head = 0\n    }\n\n    // head is at 0 and array is now full, safe to extend\n    this._tail = this._list.length\n\n    this._list.length *= 2\n    this._capacityMask = (this._capacityMask << 1) | 1\n  }\n\n  _shrinkArray () {\n    this._list.length >>>= 1\n    this._capacityMask >>>= 1\n  }\n\n  _copyArray () {\n    const newArray = []\n    const list = this._list\n    const len = list.length\n\n    let i\n    for (i = this._head; i < len; i++) {\n      newArray.push(list[i])\n    }\n    for (i = 0; i < this._tail; i++) {\n      newArray.push(list[i])\n    }\n\n    return newArray\n  }\n}\n","/** @license MIT License (c) copyright 2010 original author or authors */\n\nimport { map } from './transform'\nimport { empty, containsCanonicalEmpty } from '../source/empty'\nimport Pipe from '../sink/Pipe'\nimport IndexSink from '../sink/IndexSink'\nimport { disposeAll } from '@most/disposable'\nimport { map as mapArray } from '@most/prelude'\nimport invoke from '../invoke'\nimport Queue from '../Queue'\n\n/**\n * Combine two streams pairwise by index by applying f to values at corresponding\n * indices.  The returned stream ends when either of the input streams ends.\n * @param {function} f function to combine values\n * @returns {Stream} new stream with items at corresponding indices combined\n *  using f\n */\nexport function zip (f, stream1, stream2) {\n  return zipArray(f, [stream1, stream2])\n}\n\n/**\n* Combine streams pairwise (or tuple-wise) by index by applying f to values\n* at corresponding indices.  The returned stream ends when any of the input\n* streams ends.\n* @param {function} f function to combine values\n* @param {[Stream]} streams streams to zip using f\n* @returns {Stream} new stream with items at corresponding indices combined\n*  using f\n*/\nexport const zipArray = (f, streams) =>\n  streams.length === 0 || containsCanonicalEmpty(streams) ? empty()\n    : streams.length === 1 ? map(f, streams[0])\n    : new Zip(f, streams)\n\nclass Zip {\n  constructor (f, sources) {\n    this.f = f\n    this.sources = sources\n  }\n\n  run (sink, scheduler) {\n    const l = this.sources.length\n    const disposables = new Array(l)\n    const sinks = new Array(l)\n    const buffers = new Array(l)\n\n    const zipSink = new ZipSink(this.f, buffers, sinks, sink)\n\n    for (let indexSink, i = 0; i < l; ++i) {\n      buffers[i] = new Queue()\n      indexSink = sinks[i] = new IndexSink(i, zipSink)\n      disposables[i] = this.sources[i].run(indexSink, scheduler)\n    }\n\n    return disposeAll(disposables)\n  }\n}\n\nclass ZipSink extends Pipe {\n  constructor (f, buffers, sinks, sink) {\n    super(sink)\n    this.f = f\n    this.sinks = sinks\n    this.buffers = buffers\n  }\n\n  event (t, indexedValue) {\n    /* eslint complexity: [1, 5] */\n    if (!indexedValue.active) {\n      this._dispose(t, indexedValue.index)\n      return\n    }\n\n    const buffers = this.buffers\n    const buffer = buffers[indexedValue.index]\n\n    buffer.push(indexedValue.value)\n\n    if (buffer.length() === 1) {\n      if (!ready(this.buffers)) {\n        return\n      }\n\n      emitZipped(this.f, t, buffers, this.sink)\n\n      if (ended(this.buffers, this.sinks)) {\n        this.sink.end(t)\n      }\n    }\n  }\n\n  _dispose (t, index) {\n    const buffer = this.buffers[index]\n    if (buffer.isEmpty()) {\n      this.sink.end(t)\n    }\n  }\n}\n\nconst emitZipped = (f, t, buffers, sink) =>\n  sink.event(t, invoke(f, mapArray(head, buffers)))\n\nconst head = buffer => buffer.shift()\n\nfunction ended (buffers, sinks) {\n  for (let i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty() && !sinks[i].active) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction ready (buffers) {\n  for (let i = 0, l = buffers.length; i < l; ++i) {\n    if (buffers[i].isEmpty()) {\n      return false\n    }\n  }\n  return true\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport { disposeBoth, tryDispose } from '@most/disposable'\nimport { schedulerRelativeTo, currentTime } from '@most/scheduler'\nimport { empty, isCanonicalEmpty } from '../source/empty'\n\n/**\n * Given a stream of streams, return a new stream that adopts the behavior\n * of the most recent inner stream.\n * @param {Stream} stream of streams on which to switch\n * @returns {Stream} switching stream\n */\nexport const switchLatest = stream =>\n  isCanonicalEmpty(stream)\n    ? empty()\n    : new Switch(stream)\n\nclass Switch {\n  constructor (source) {\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    const switchSink = new SwitchSink(sink, scheduler)\n    return disposeBoth(switchSink, this.source.run(switchSink, scheduler))\n  }\n}\n\nclass SwitchSink {\n  constructor (sink, scheduler) {\n    this.sink = sink\n    this.scheduler = scheduler\n    this.current = null\n    this.ended = false\n  }\n\n  event (t, stream) {\n    this._disposeCurrent(t)\n    this.current = new Segment(stream, t, Infinity, this, this.sink, this.scheduler)\n  }\n\n  end (t) {\n    this.ended = true\n    this._checkEnd(t)\n  }\n\n  error (t, e) {\n    this.ended = true\n    this.sink.error(t, e)\n  }\n\n  dispose () {\n    return this._disposeCurrent(currentTime(this.scheduler))\n  }\n\n  _disposeCurrent (t) {\n    if (this.current !== null) {\n      return this.current._dispose(t)\n    }\n  }\n\n  _disposeInner (t, inner) {\n    inner._dispose(t)\n    if (inner === this.current) {\n      this.current = null\n    }\n  }\n\n  _checkEnd (t) {\n    if (this.ended && this.current === null) {\n      this.sink.end(t)\n    }\n  }\n\n  _endInner (t, inner) {\n    this._disposeInner(t, inner)\n    this._checkEnd(t)\n  }\n\n  _errorInner (t, e, inner) {\n    this._disposeInner(t, inner)\n    this.sink.error(t, e)\n  }\n}\n\nclass Segment {\n  constructor (source, min, max, outer, sink, scheduler) {\n    this.min = min\n    this.max = max\n    this.outer = outer\n    this.sink = sink\n    this.disposable = source.run(this, schedulerRelativeTo(min, scheduler))\n  }\n\n  event (t, x) {\n    const time = Math.max(0, t + this.min)\n    if (time < this.max) {\n      this.sink.event(time, x)\n    }\n  }\n\n  end (t) {\n    this.outer._endInner(t + this.min, this)\n  }\n\n  error (t, e) {\n    this.outer._errorInner(t + this.min, e, this)\n  }\n\n  _dispose (t) {\n    tryDispose(t + this.min, this.disposable, this.sink)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport Filter from '../fusion/Filter'\nimport { empty, isCanonicalEmpty } from '../source/empty'\n\n/**\n * Retain only items matching a predicate\n * @param {function(x:*):boolean} p filtering predicate called for each item\n * @param {Stream} stream stream to filter\n * @returns {Stream} stream containing only items for which predicate returns truthy\n */\nexport const filter = (p, stream) =>\n  Filter.create(p, stream)\n\n/**\n * Skip repeated events, using === to detect duplicates\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport const skipRepeats = stream =>\n  skipRepeatsWith(same, stream)\n\n/**\n * Skip repeated events using the provided equals function to detect duplicates\n * @param {function(a:*, b:*):boolean} equals optional function to compare items\n * @param {Stream} stream stream from which to omit repeated events\n * @returns {Stream} stream without repeated events\n */\nexport const skipRepeatsWith = (equals, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new SkipRepeats(equals, stream)\n\nclass SkipRepeats {\n  constructor (equals, source) {\n    this.equals = equals\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new SkipRepeatsSink(this.equals, sink), scheduler)\n  }\n}\n\nclass SkipRepeatsSink extends Pipe {\n  constructor (equals, sink) {\n    super(sink)\n    this.equals = equals\n    this.value = void 0\n    this.init = true\n  }\n\n  event (t, x) {\n    if (this.init) {\n      this.init = false\n      this.value = x\n      this.sink.event(t, x)\n    } else if (!this.equals(this.value, x)) {\n      this.value = x\n      this.sink.event(t, x)\n    }\n  }\n}\n\nfunction same (a, b) {\n  return a === b\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport { disposeAll } from '@most/disposable'\nimport { join } from './chain'\n\nexport const until = (signal, stream) =>\n  new Until(signal, stream)\n\nexport const since = (signal, stream) =>\n  new Since(signal, stream)\n\nexport const during = (timeWindow, stream) =>\n  until(join(timeWindow), since(timeWindow, stream))\n\nclass Until {\n  constructor (maxSignal, source) {\n    this.maxSignal = maxSignal\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    const min = new Bound(-Infinity, sink)\n    const max = new UpperBound(this.maxSignal, sink, scheduler)\n    const disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n    return disposeAll([min, max, disposable])\n  }\n}\n\nclass Since {\n  constructor (minSignal, source) {\n    this.minSignal = minSignal\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    const min = new LowerBound(this.minSignal, sink, scheduler)\n    const max = new Bound(Infinity, sink)\n    const disposable = this.source.run(new TimeWindowSink(min, max, sink), scheduler)\n\n    return disposeAll([min, max, disposable])\n  }\n}\n\nclass Bound extends Pipe {\n  constructor (value, sink) {\n    super(sink)\n    this.value = value\n  }\n\n  event () {}\n  end () {}\n\n  dispose () {}\n}\n\nclass TimeWindowSink extends Pipe {\n  constructor (min, max, sink) {\n    super(sink)\n    this.min = min\n    this.max = max\n  }\n\n  event (t, x) {\n    if (t >= this.min.value && t < this.max.value) {\n      this.sink.event(t, x)\n    }\n  }\n}\n\nclass LowerBound extends Pipe {\n  constructor (signal, sink, scheduler) {\n    super(sink)\n    this.value = Infinity\n    this.disposable = signal.run(this, scheduler)\n  }\n\n  event (t /*, x */) {\n    if (t < this.value) {\n      this.value = t\n    }\n  }\n\n  end () {}\n\n  dispose () {\n    return this.disposable.dispose()\n  }\n}\n\nclass UpperBound extends Pipe {\n  constructor (signal, sink, scheduler) {\n    super(sink)\n    this.value = Infinity\n    this.disposable = signal.run(this, scheduler)\n  }\n\n  event (t, x) {\n    if (t < this.value) {\n      this.value = t\n      this.sink.end(t)\n    }\n  }\n\n  end () {}\n\n  dispose () {\n    return this.disposable.dispose()\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport Pipe from '../sink/Pipe'\nimport { disposeBoth } from '@most/disposable'\nimport { cancelTask, delay as scheduleDelay } from '@most/scheduler'\nimport { propagateEndTask, propagateEventTask } from '../scheduler/PropagateTask'\n\n/**\n * @param {Number} delayTime milliseconds to delay each item\n * @param {Stream} stream\n * @returns {Stream} new stream containing the same items, but delayed by ms\n */\nexport const delay = (delayTime, stream) =>\n  delayTime <= 0 ? stream : new Delay(delayTime, stream)\n\nclass Delay {\n  constructor (dt, source) {\n    this.dt = dt\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    const delaySink = new DelaySink(this.dt, sink, scheduler)\n    return disposeBoth(delaySink, this.source.run(delaySink, scheduler))\n  }\n}\n\nclass DelaySink extends Pipe {\n  constructor (dt, sink, scheduler) {\n    super(sink)\n    this.dt = dt\n    this.scheduler = scheduler\n    this.tasks = []\n  }\n\n  dispose () {\n    this.tasks.forEach(cancelTask)\n  }\n\n  event (t, x) {\n    this.tasks.push(scheduleDelay(this.dt, propagateEventTask(x, this.sink), this.scheduler))\n  }\n\n  end (t) {\n    this.tasks.push(scheduleDelay(this.dt, propagateEndTask(this.sink), this.scheduler))\n  }\n}\n","/** @license MIT License (c) copyright 2010-2017 original author or authors */\n\nimport Pipe from '../sink/Pipe'\nimport Map from '../fusion/Map'\nimport { empty, isCanonicalEmpty } from '../source/empty'\nimport { delay } from '@most/scheduler'\n\n/**\n * Limit the rate of events by suppressing events that occur too often\n * @param {Number} period time to suppress events\n * @param {Stream} stream\n * @returns {Stream}\n */\nexport const throttle = (period, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : stream instanceof Map ? commuteMapThrottle(period, stream)\n    : stream instanceof Throttle ? fuseThrottle(period, stream)\n    : new Throttle(period, stream)\n\nconst commuteMapThrottle = (period, mapStream) =>\n  Map.create(mapStream.f, throttle(period, mapStream.source))\n\nconst fuseThrottle = (period, throttleStream) =>\n  new Throttle(Math.max(period, throttleStream.period), throttleStream.source)\n\nclass Throttle {\n  constructor (period, source) {\n    this.period = period\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new ThrottleSink(this.period, sink), scheduler)\n  }\n}\n\nclass ThrottleSink extends Pipe {\n  constructor (period, sink) {\n    super(sink)\n    this.time = 0\n    this.period = period\n  }\n\n  event (t, x) {\n    if (t >= this.time) {\n      this.time = t + this.period\n      this.sink.event(t, x)\n    }\n  }\n}\n/**\n * Wait for a burst of events to subside and emit only the last event in the burst\n * @param {Number} period events occuring more frequently than this\n *  will be suppressed\n * @param {Stream} stream stream to debounce\n * @returns {Stream} new debounced stream\n */\nexport const debounce = (period, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new Debounce(period, stream)\n\nclass Debounce {\n  constructor (dt, source) {\n    this.dt = dt\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return new DebounceSink(this.dt, this.source, sink, scheduler)\n  }\n}\n\nclass DebounceSink {\n  constructor (dt, source, sink, scheduler) {\n    this.dt = dt\n    this.sink = sink\n    this.scheduler = scheduler\n    this.value = void 0\n    this.timer = null\n\n    this.disposable = source.run(this, scheduler)\n  }\n\n  event (t, x) {\n    this._clearTimer()\n    this.value = x\n    this.timer = delay(this.dt, new DebounceTask(this, x), this.scheduler)\n  }\n\n  _event (t, x) {\n    this._clearTimer()\n    this.sink.event(t, x)\n  }\n\n  end (t) {\n    if (this._clearTimer()) {\n      this.sink.event(t, this.value)\n      this.value = undefined\n    }\n    this.sink.end(t)\n  }\n\n  error (t, x) {\n    this._clearTimer()\n    this.sink.error(t, x)\n  }\n\n  dispose () {\n    this._clearTimer()\n    this.disposable.dispose()\n  }\n\n  _clearTimer () {\n    if (this.timer === null) {\n      return false\n    }\n    this.timer.dispose()\n    this.timer = null\n    return true\n  }\n}\n\nclass DebounceTask {\n  constructor (debounce, value) {\n    this.debounce = debounce\n    this.value = value\n  }\n\n  run (t) {\n    this.debounce._event(t, this.value)\n  }\n\n  error (t, e) {\n    this.debounce.error(t, e)\n  }\n\n  dispose () {}\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport fatal from '../fatalError'\nimport { now } from '../source/now'\nimport { empty, isCanonicalEmpty } from '../source/empty'\nimport { compose } from '@most/prelude'\nimport { currentTime } from '@most/scheduler'\n\n/**\n * Turn a Stream<Promise<T>> into Stream<T> by awaiting each promise.\n * Event order is preserved. The stream will fail if any promise rejects.\n */\nexport const awaitPromises = stream =>\n  isCanonicalEmpty(stream) ? empty() : new Await(stream)\n\n/**\n * Create a stream containing only the promise's fulfillment\n * value at the time it fulfills.\n * @param {Promise<T>} p promise\n * @return {Stream<T>} stream containing promise's fulfillment value.\n *  If the promise rejects, the stream will error\n */\nexport const fromPromise = compose(awaitPromises, now)\n\nclass Await {\n  constructor (source) {\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return this.source.run(new AwaitSink(sink, scheduler), scheduler)\n  }\n}\n\nclass AwaitSink {\n  constructor (sink, scheduler) {\n    this.sink = sink\n    this.scheduler = scheduler\n    this.queue = Promise.resolve()\n\n    // Pre-create closures, to avoid creating them per event\n    this._eventBound = x => this.sink.event(currentTime(this.scheduler), x)\n    this._endBound = () => this.sink.end(currentTime(this.scheduler))\n    this._errorBound = e => this.sink.error(currentTime(this.scheduler), e)\n  }\n\n  event (t, promise) {\n    this.queue = this.queue.then(() => this._event(promise))\n      .catch(this._errorBound)\n  }\n\n  end (t) {\n    this.queue = this.queue.then(this._endBound)\n      .catch(this._errorBound)\n  }\n\n  error (t, e) {\n    // Don't resolve error values, propagate directly\n    this.queue = this.queue.then(() => this._errorBound(e))\n      .catch(fatal)\n  }\n\n  _event (promise) {\n    return promise.then(this._eventBound)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport default class SafeSink {\n  constructor (sink) {\n    this.sink = sink\n    this.active = true\n  }\n\n  event (t, x) {\n    if (!this.active) {\n      return\n    }\n    this.sink.event(t, x)\n  }\n\n  end (t, x) {\n    if (!this.active) {\n      return\n    }\n    this.disable()\n    this.sink.end(t, x)\n  }\n\n  error (t, e) {\n    this.disable()\n    this.sink.error(t, e)\n  }\n\n  disable () {\n    this.active = false\n    return this.sink\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nexport function tryEvent (t, x, sink) {\n  try {\n    sink.event(t, x)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n\nexport function tryEnd (t, sink) {\n  try {\n    sink.end(t)\n  } catch (e) {\n    sink.error(t, e)\n  }\n}\n","/** @license MIT License (c) copyright 2010-2016 original author or authors */\n/** @author Brian Cavalier */\n/** @author John Hann */\n\nimport SafeSink from '../sink/SafeSink'\nimport { tryDispose } from '@most/disposable'\nimport { asap } from '@most/scheduler'\nimport { tryEvent, tryEnd } from '../source/tryEvent'\nimport { empty, isCanonicalEmpty } from '../source/empty'\nimport { propagateErrorTask } from '../scheduler/PropagateTask'\nimport { run } from '../run'\nimport { withLocalTime } from './withLocalTime'\n\n/**\n * If stream encounters an error, recover and continue with items from stream\n * returned by f.\n * @param {function(error:*):Stream} f function which returns a new stream\n * @param {Stream} stream\n * @returns {Stream} new stream which will recover from an error by calling f\n */\nexport const recoverWith = (f, stream) =>\n  isCanonicalEmpty(stream) ? empty()\n    : new RecoverWith(f, stream)\n\n/**\n * Create a stream containing only an error\n * @param {*} e error value, preferably an Error or Error subtype\n * @returns {Stream} new stream containing only an error\n */\nexport const throwError = e =>\n  new ErrorStream(e)\n\nclass ErrorStream {\n  constructor (e) {\n    this.value = e\n  }\n\n  run (sink, scheduler) {\n    return asap(propagateErrorTask(this.value, sink), scheduler)\n  }\n}\n\nclass RecoverWith {\n  constructor (f, source) {\n    this.f = f\n    this.source = source\n  }\n\n  run (sink, scheduler) {\n    return new RecoverWithSink(this.f, this.source, sink, scheduler)\n  }\n}\n\nclass RecoverWithSink {\n  constructor (f, source, sink, scheduler) {\n    this.f = f\n    this.sink = new SafeSink(sink)\n    this.scheduler = scheduler\n    this.disposable = source.run(this, scheduler)\n  }\n\n  event (t, x) {\n    tryEvent(t, x, this.sink)\n  }\n\n  end (t) {\n    tryEnd(t, this.sink)\n  }\n\n  error (t, e) {\n    const nextSink = this.sink.disable()\n\n    tryDispose(t, this.disposable, this.sink)\n\n    this._startNext(t, e, nextSink)\n  }\n\n  _startNext (t, x, sink) {\n    try {\n      this.disposable = this._continue(this.f, t, x, sink)\n    } catch (e) {\n      sink.error(t, e)\n    }\n  }\n\n  _continue (f, t, x, sink) {\n    return run(sink, this.scheduler, withLocalTime(t, f(x)))\n  }\n\n  dispose () {\n    return this.disposable.dispose()\n  }\n}\n","import { append, findIndex, remove } from '@most/prelude'\nimport { disposeNone, disposeOnce } from '@most/disposable'\nimport { tryEnd, tryEvent } from '../source/tryEvent'\nimport { isCanonicalEmpty } from '../source/empty'\n\nexport const multicast = stream =>\n  stream instanceof Multicast || isCanonicalEmpty(stream)\n    ? stream\n    : new Multicast(stream)\n\nclass Multicast {\n  constructor (source) {\n    this.source = new MulticastSource(source)\n  }\n  run (sink, scheduler) {\n    return this.source.run(sink, scheduler)\n  }\n}\n\nexport class MulticastSource {\n  constructor (source) {\n    this.source = source\n    this.sinks = []\n    this.disposable = disposeNone()\n  }\n\n  run (sink, scheduler) {\n    const n = this.add(sink)\n    if (n === 1) {\n      this.disposable = this.source.run(this, scheduler)\n    }\n    return disposeOnce(new MulticastDisposable(this, sink))\n  }\n\n  dispose () {\n    const disposable = this.disposable\n    this.disposable = disposeNone()\n    return disposable.dispose()\n  }\n\n  add (sink) {\n    this.sinks = append(sink, this.sinks)\n    return this.sinks.length\n  }\n\n  remove (sink) {\n    const i = findIndex(sink, this.sinks)\n    // istanbul ignore next\n    if (i >= 0) {\n      this.sinks = remove(i, this.sinks)\n    }\n\n    return this.sinks.length\n  }\n\n  event (time, value) {\n    const s = this.sinks\n    if (s.length === 1) {\n      return s[0].event(time, value)\n    }\n    for (let i = 0; i < s.length; ++i) {\n      tryEvent(time, value, s[i])\n    }\n  }\n\n  end (time) {\n    const s = this.sinks\n    for (let i = 0; i < s.length; ++i) {\n      tryEnd(time, s[i])\n    }\n  }\n\n  error (time, err) {\n    const s = this.sinks\n    for (let i = 0; i < s.length; ++i) {\n      s[i].error(time, err)\n    }\n  }\n}\n\nexport class MulticastDisposable {\n  constructor (source, sink) {\n    this.source = source\n    this.sink = sink\n  }\n\n  dispose () {\n    if (this.source.remove(this.sink) === 0) {\n      this.source.dispose()\n    }\n  }\n}\n","/** @license MIT License (c) copyright 2016 original author or authors */\n/* eslint-disable import/first */\nimport { curry2, curry3 } from '@most/prelude'\n\nexport { empty } from './source/empty'\nexport { never } from './source/never'\nexport { now } from './source/now'\nexport { at } from './source/at'\n\nexport { periodic } from './source/periodic'\n\nexport { newStream } from './source/newStream'\n\nimport { zipItems as _zipItems, withItems as _withItems } from './combinator/zipItems'\nexport const zipItems = curry3(_zipItems)\nexport const withItems = curry2(_withItems)\n\n// -----------------------------------------------------------------------\n// Observing\n\nimport { runEffects as _runEffects } from './runEffects'\nimport { run as _run } from './run'\n\nexport const runEffects = curry2(_runEffects)\nexport const run = curry3(_run)\n\n// -------------------------------------------------------\n\nimport { withLocalTime as _withLocalTime } from './combinator/withLocalTime'\n\nexport const withLocalTime = curry2(_withLocalTime)\n\n// -------------------------------------------------------\n\nimport { loop as _loop } from './combinator/loop'\n\nexport const loop = curry3(_loop)\n\n// -------------------------------------------------------\n\nimport { scan as _scan } from './combinator/scan'\n\nexport const scan = curry3(_scan)\n\n// -----------------------------------------------------------------------\n// Extending\n\nimport { startWith as _startWith } from './combinator/startWith'\n\nexport const startWith = curry2(_startWith)\n\n// -----------------------------------------------------------------------\n// Transforming\n\nimport { map as _map, constant as _constant, tap as _tap } from './combinator/transform'\nimport { ap as _ap } from './combinator/applicative'\n\nexport const map = curry2(_map)\nexport const constant = curry2(_constant)\nexport const tap = curry2(_tap)\nexport const ap = curry2(_ap)\n\n// -----------------------------------------------------------------------\n// FlatMapping\n\nimport { chain as _chain, join } from './combinator/chain'\nexport const chain = curry2(_chain)\nexport { join }\n\nimport { continueWith as _continueWith } from './combinator/continueWith'\nexport const continueWith = curry2(_continueWith)\n\nimport { concatMap as _concatMap } from './combinator/concatMap'\nexport const concatMap = curry2(_concatMap)\n\n// -----------------------------------------------------------------------\n// Concurrent merging\n\nimport { mergeConcurrently as _mergeConcurrently, mergeMapConcurrently as _mergeMapConcurrently } from './combinator/mergeConcurrently'\n\nexport const mergeConcurrently = curry2(_mergeConcurrently)\nexport const mergeMapConcurrently = curry3(_mergeMapConcurrently)\n\n// -----------------------------------------------------------------------\n// Merging\n\nimport { merge as _merge, mergeArray } from './combinator/merge'\n\nexport const merge = curry2(_merge)\nexport { mergeArray }\n\n// -----------------------------------------------------------------------\n// Combining\n\nimport { combine as _combine, combineArray as _combineArray } from './combinator/combine'\n\nexport const combine = curry3(_combine)\nexport const combineArray = curry2(_combineArray)\n\n// -----------------------------------------------------------------------\n// Sampling\n\nimport { sample as _sample, snapshot as _snapshot } from './combinator/snapshot'\n\nexport const sample = curry2(_sample)\nexport const snapshot = curry3(_snapshot)\n\n// -----------------------------------------------------------------------\n// Zipping\n\nimport { zip as _zip, zipArray as _zipArray } from './combinator/zip'\n\nexport const zip = curry3(_zip)\nexport const zipArray = curry2(_zipArray)\n\n// -----------------------------------------------------------------------\n// Switching\n\nexport { switchLatest } from './combinator/switch'\n\n// -----------------------------------------------------------------------\n// Filtering\n\nimport { filter as _filter, skipRepeats, skipRepeatsWith as _skipRepeatsWith } from './combinator/filter'\n\nexport const filter = curry2(_filter)\nexport { skipRepeats }\nexport const skipRepeatsWith = curry2(_skipRepeatsWith)\n\n// -----------------------------------------------------------------------\n// Slicing\n\nimport { take as _take, skip as _skip, slice as _slice, takeWhile as _takeWhile, skipWhile as _skipWhile, skipAfter as _skipAfter } from './combinator/slice'\n\nexport const take = curry2(_take)\nexport const skip = curry2(_skip)\nexport const slice = curry3(_slice)\nexport const takeWhile = curry2(_takeWhile)\nexport const skipWhile = curry2(_skipWhile)\nexport const skipAfter = curry2(_skipAfter)\n\n// -----------------------------------------------------------------------\n// Time slicing\n\nimport { until as _until, since as _since, during as _during } from './combinator/timeslice'\n\nexport const until = curry2(_until)\nexport const since = curry2(_since)\nexport const during = curry2(_during)\n\n// -----------------------------------------------------------------------\n// Delaying\n\nimport { delay as _delay } from './combinator/delay'\n\nexport const delay = curry2(_delay)\n\n// -----------------------------------------------------------------------\n// Rate limiting\n\nimport { throttle as _throttle, debounce as _debounce } from './combinator/limit'\n\nexport const throttle = curry2(_throttle)\nexport const debounce = curry2(_debounce)\n\n// -----------------------------------------------------------------------\n// Awaiting Promises\n\nexport { fromPromise, awaitPromises } from './combinator/promises'\n\n// -----------------------------------------------------------------------\n// Error handling\n\nimport { recoverWith as _recoverWith, throwError } from './combinator/errors'\n\nexport const recoverWith = curry2(_recoverWith)\nexport { throwError }\n\n// -----------------------------------------------------------------------\n// Multicasting\n\nexport { multicast, MulticastSource } from './combinator/multicast'\n\n// ----------------------------------------------------------------------\nimport {\n  propagateTask as _propagateTask,\n  propagateEventTask as _propagateEventTask,\n  propagateErrorTask as _propagateErrorTask,\n  propagateEndTask\n} from './scheduler/PropagateTask'\n\nexport const propagateTask = curry3(_propagateTask)\nexport const propagateEventTask = curry2(_propagateEventTask)\nexport const propagateErrorTask = curry2(_propagateErrorTask)\nexport { propagateEndTask }\n"],"names":["fatalError","e","rethrow","propagateTask","run","value","sink","PropagateTask","propagateEventTask","runEvent","propagateEndTask","runEnd","undefined","propagateErrorTask","runError","_run","active","dispose","t","error","fatal","x","event","_","end","empty","EMPTY","isCanonicalEmpty","stream","containsCanonicalEmpty","streams","some","Empty","scheduler","asap","never","NEVER","Never","disposeNone","at","At","time","delay","runAt","now","periodic","Periodic","period","schedulePeriodic","newStream","Stream","Pipe","boundsFrom","unsafeMin","unsafeMax","min","Math","max","minBounds","Infinity","maxBounds","mergeBounds","b1","b2","isNilBounds","b","isInfiniteBounds","Filter","p","source","FilterSink","create","and","q","FilterMap","f","FilterMapSink","Map","MapSink","compose","SettableDisposable","disposable","disposed","setDisposable","Error","take","n","sliceBounds","skip","slice","start","bounds","isSliceEmpty","commuteMapSlice","Slice","fuseSlice","createSlice","mapStream","sliceStream","sliceSink","SliceSink","takeWhile","TakeWhile","takeWhileSink","TakeWhileSink","skipWhile","SkipWhile","SkipWhileSink","skipping","skipAfter","SkipAfter","SkipAfterSink","withItems","items","zipItems","keepLeft","length","ZipItems","a","ZipItemsSink","index","runEffects","curry2","Promise","resolve","reject","runStream","observer","RunEffectsSink","_end","_error","_disposable","_dispose","tryDispose","RelativeSink","offset","withLocalTime","origin","WithLocalTime","relativeSink","schedulerRelativeTo","loop","stepper","seed","Loop","step","LoopSink","result","scan","initial","Scan","z","d1","d2","ScanSink","disposeBoth","continueWith","ContinueWith","ContinueWithSink","disposeOnce","_startNext","_continue","startWith","map","constant","tap","Tap","TapSink","IndexSink","i","Sink","invoke","args","apply","combine","stream1","stream2","combineArray","Combine","sources","l","disposables","Array","sinks","mergeSink","CombineSink","indexSink","disposeAll","awaiting","values","hasValue","fill","activeCount","indexedValue","_updateReady","ap","fs","xs","LinkedList","head","add","prev","next","remove","isEmpty","mergeConcurrently","concurrency","mergeMapConcurrently","identity","MergeConcurrently","Outer","pending","current","_addInner","_startInner","push","_initInner","innerSink","Inner","mapAndRun","_checkEnd","_endInner","inner","shift","outer","chain","join","concatMap","merge","mergeArray","mergeStreams","withoutCanonicalEmpty","Merge","reduce","appendSources","filter","isNotCanonicalEmpty","concat","MergeSink","indexValue","sample","sampler","snapshot","Snapshot","sampleSink","SnapshotSink","valuesDisposable","latest","samplerDisposable","LatestValueSink","HEAD_MAX_SHRINK","TAIL_MIN_SHRINK","Queue","_head","_tail","_capacityMask","_list","tail","_growArray","_shrinkArray","_copyArray","newArray","list","len","zip","zipArray","Zip","buffers","zipSink","ZipSink","buffer","ready","ended","emitZipped","mapArray","switchLatest","Switch","switchSink","SwitchSink","_disposeCurrent","Segment","currentTime","_disposeInner","_errorInner","skipRepeats","skipRepeatsWith","same","equals","SkipRepeats","SkipRepeatsSink","init","until","signal","Until","since","Since","during","timeWindow","maxSignal","Bound","UpperBound","TimeWindowSink","minSignal","LowerBound","delayTime","Delay","dt","delaySink","DelaySink","tasks","forEach","cancelTask","scheduleDelay","throttle","commuteMapThrottle","Throttle","fuseThrottle","throttleStream","ThrottleSink","debounce","Debounce","DebounceSink","timer","_clearTimer","DebounceTask","_event","awaitPromises","Await","fromPromise","AwaitSink","queue","_eventBound","_endBound","_errorBound","promise","then","catch","SafeSink","disable","tryEvent","tryEnd","recoverWith","RecoverWith","throwError","ErrorStream","RecoverWithSink","nextSink","multicast","Multicast","MulticastSource","MulticastDisposable","append","findIndex","s","err","curry3","_zipItems","_withItems","_runEffects","_withLocalTime","_loop","_scan","_startWith","_map","_constant","_tap","_ap","_chain","_continueWith","_concatMap","_mergeConcurrently","_mergeMapConcurrently","_merge","_combine","_combineArray","_sample","_snapshot","_zip","_zipArray","_filter","_skipRepeatsWith","_take","_skip","_slice","_takeWhile","_skipWhile","_skipAfter","_until","_since","_during","_delay","_throttle","_debounce","_recoverWith","_propagateTask","_propagateEventTask","_propagateErrorTask"],"mappings":"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"}